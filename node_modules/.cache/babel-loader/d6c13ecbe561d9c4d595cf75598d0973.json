{"ast":null,"code":"var _jsxFileName = \"/home/javimetal/workspace/food-order/src/components/Layout/HeaderCartButton.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport cartContext from \"../../store/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderCartButton = props => {\n  _s();\n  const [btnIsHighLighted, setBtnIsHighLighted] = useState(false);\n  const cartCtx = useContext(cartContext);\n  const {\n    items\n  } = cartCtx;\n  const numberOfCartItems = items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0); // .items.length is not ok  beacuse an item is a sushi and then the amount of the sushi meals could be three\n\n  const btnClasses = `${classes.button} ${btnIsHighLighted ? classes.bump : \"\"}`;\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n    setBtnIsHighLighted(true);\n    const timer = setTimeout(() => {\n      setBtnIsHighLighted(false);\n    }, 300);\n    return () => {\n      // cleanup function . it will be esecuted by react automatically.\n      clearTimeout(timer); // it is a good practioce to clean always the timers. neither the components disappears or not\n    };\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.badge,\n      children: numberOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderCartButton, \"KKHtVpfwnvSChzqESjeYXZ88VOo=\");\n_c = HeaderCartButton;\nexport default HeaderCartButton;\nvar _c;\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"names":["useContext","useEffect","useState","CartIcon","classes","cartContext","HeaderCartButton","props","btnIsHighLighted","setBtnIsHighLighted","cartCtx","items","numberOfCartItems","reduce","curNumber","item","amount","btnClasses","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge"],"sources":["/home/javimetal/workspace/food-order/src/components/Layout/HeaderCartButton.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\n\nimport CartIcon from \"../Cart/CartIcon\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport cartContext from \"../../store/cart-context\";\n\nconst HeaderCartButton = (props) => {\n  const [btnIsHighLighted, setBtnIsHighLighted] = useState(false);\n  const cartCtx = useContext(cartContext);\n  const { items } = cartCtx;\n\n  const numberOfCartItems = items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0); // .items.length is not ok  beacuse an item is a sushi and then the amount of the sushi meals could be three\n\n  const btnClasses = `${classes.button} ${\n    btnIsHighLighted ? classes.bump : \"\"\n  }`;\n\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n    setBtnIsHighLighted(true);\n    const timer = setTimeout(() => {\n      setBtnIsHighLighted(false);\n    }, 300);\n\n    return () => {\n      // cleanup function . it will be esecuted by react automatically.\n      clearTimeout(timer); // it is a good practioce to clean always the timers. neither the components disappears or not\n    };\n  }, [items]);\n\n  return (\n    <button className={btnClasses} onClick={props.onClick}>\n      <span className={classes.icon}>\n        <CartIcon />\n      </span>\n      <span>Your Cart</span>\n      <span className={classes.badge}>{numberOfCartItems}</span>\n    </button>\n  );\n};\n\nexport default HeaderCartButton;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAEvD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,WAAW,MAAM,0BAA0B;AAAC;AAEnD,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAAA;EAClC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMQ,OAAO,GAAGV,UAAU,CAACK,WAAW,CAAC;EACvC,MAAM;IAAEM;EAAM,CAAC,GAAGD,OAAO;EAEzB,MAAME,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAAC,CAACC,SAAS,EAAEC,IAAI,KAAK;IAC1D,OAAOD,SAAS,GAAGC,IAAI,CAACC,MAAM;EAChC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEP,MAAMC,UAAU,GAAI,GAAEb,OAAO,CAACc,MAAO,IACnCV,gBAAgB,GAAGJ,OAAO,CAACe,IAAI,GAAG,EACnC,EAAC;EAEFlB,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;MACtB;IACF;IACAX,mBAAmB,CAAC,IAAI,CAAC;IACzB,MAAMY,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7Bb,mBAAmB,CAAC,KAAK,CAAC;IAC5B,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACX;MACAc,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,oBACE;IAAQ,SAAS,EAAEM,UAAW;IAAC,OAAO,EAAEV,KAAK,CAACiB,OAAQ;IAAA,wBACpD;MAAM,SAAS,EAAEpB,OAAO,CAACqB,IAAK;MAAA,uBAC5B,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACP,eACP;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAM,SAAS,EAAErB,OAAO,CAACsB,KAAM;MAAA,UAAEd;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACnD;AAEb,CAAC;AAAC,GArCIN,gBAAgB;AAAA,KAAhBA,gBAAgB;AAuCtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}